<script>
  import wepy from 'wepy';
  export default class toastInfo extends wepy.component {
    data = {
      infoText: ''
    };
    methods = {
      modelFunc: function (code, message) {
        let that = this;
        if (code != 'A00006') {
          if (code == '10017') {
            wx.showToast({
              title: '去登录...',
              icon: 'loading',
              duration: 2000,
              success: function () {
                that.$parent.$navigate('secLogin');
              }
            });
            return false;
          }
          this.infoText = message;
          wx.showModal({
            // title: '温馨提示',
            content: that.infoText,
            showCancel:false,
            confirmText:'我知道了',
            success () {
              return false;
            }
          })
        }
      },
      // 验证手机号格式
      phoneReg: function (num) {
        let pattern = /^1[3456789]\d{9}$/;
        let str = num.replace(/\s+/g, "");
        if (!pattern.test(str)) {
          return false;
        } else {
          return true;
        }
      },
      // 身份证验证
      idCardReg: function (num) {
        let pattern = /^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/;
        let str = num.replace(/\s+/g, "");
        if (!pattern.test(str)) {
          return false;
        } else {
          return true;
        }
      },
      // 银行卡验证
      bankCardReg: function (num) {
        let pattern = /^([1-9]{1})(\d{15}|\d{18})$/;
        let str = num.replace(/\s+/g, "");
        if (!pattern.test(str)) {
          return false;
        } else {
          return true;
        }
      },
      // 密码格式验证 8~20位 字母和数字的组合
      passwordReg: function (num) {
        let pattern = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,20}$/;
        let str = num.replace(/\s+/g, "");
        if (!pattern.test(str)) {
          return false;
        } else {
          return true;
        }
      },
      // 邮箱校验
      emailReg: function (num) {
        let pattern = /^\w+@[a-z0-9]+\.[a-z]{2,4}$/;
        let str = num.replace(/\s+/g, "");
        if (!pattern.test(str)) {
          return false;
        } else {
          return true;
        }
      }
    }
  }
</script>